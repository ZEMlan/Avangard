<?xml version="1.0" encoding="utf-8"?>
<mission>
      <score>20</score>
      <task>????? System;
using System.Collections.Generics;

public char[] board = ??? char[9]
        {'1', '2', '3', '4', '5', '6', '7', '8', '9'};

        public char ??????????() {
            int[,] win_cord = new ????[8, ?] {
                {0, 1, 2},
                {3, 4, 5},
                {6, 7, 8},
                {0, 3, 6},
                {1, 4, 7},
                {0, 4, 8},
                {2, 5, 8},
                {2, 4, 6} };
            ??? (int i = 0; i &lt; 8; i++) {
                ?? (board[win_cord[i, 0]] == board[win_cord[i, 1]] &amp;&amp;
                    board[win_cord[i, 2]] == board[win_cord[i, 0]]) {
                    ??????? board[win_cord[i, 0]];
                }
            }
            return '0';
        }
        public ???? DrawBoard() {
            Console.WriteLine("-------");
            for (int i = 0; i &lt; 3; i++) {
                Console.?????("|" + board[i * 3]);
                Console.Write("|" + board[i * 3 + 1]);
                Console.Write("|" + board[i * 3 + 2] + "|");
                ???????.WriteLine("");
            }
            Console.WriteLine("-------");
        }
        public void TakeInput(???? player_place) {
            bool valid = ???????
            int player_answer;
            ??????(!valid) {
                Console.WriteLine("Куда поставим " + player_place + '?');
                ??? {
                    player_answer = Convert.?????(Console.ReadLine());
                }
                catch (FormatException) {
                    Console.??????????("Некорректный ввод. Вы уверены, что ввели число?");
                    continue;
                }
                if (player_answer &gt;= 1 ?? player_answer &lt;= 9) {
                    if (board[player_answer - 1] != 'X' &amp;&amp;
                        board[player_answer - 1] != 'O') {
                        board[player_answer - 1] = player_place;
                        valid = ??????
                    }
                    else {
                        Console.WriteLine("Эта клеточка уже занята");
                    }
                }
                ???? {
                    Console.WriteLine("Некорректный ввод. Введите число от 1 до 9 чтобы сходить.");
                }
            }
        }
        static void Main(string[] args) {
            bool win = false;
            int counter = 0;
            ??????? (!win) {
                x_or_o.DrawBoard();
                if (counter % 2 == 0) {
                    x_or_o.TakeInput('X');
                }
                else {
                    x_or_o.TakeInput('O');
                }
                ??????? += 1;
                if (??????? == 9) { Console.WriteLine("Ничья!"); }
                else if (counter &gt; 4) {
                    ???? tmp = x_or_o.CheckWin();
                    if (tmp != '0') {
                        Console.WriteLine(tmp + " выйграл!");
                        win = true;
                    }
                }
            }
            x_or_o.?????????();
        }
    }</task>
      <check>using System;
using System.Collections.Generics;

public char[] board = new char[9]
        {'1', '2', '3', '4', '5', '6', '7', '8', '9'};
        public char CheckWin() {
            int[,] win_cord = new int[8, 3] {
                {0, 1, 2},
                {3, 4, 5},
                {6, 7, 8},
                {0, 3, 6},
                {1, 4, 7},
                {0, 4, 8},
                {2, 5, 8},
                {2, 4, 6} };
            for (int i = 0; i &lt; 8; i++) {
                if (board[win_cord[i, 0]] == board[win_cord[i, 1]] &amp;&amp;
                    board[win_cord[i, 2]] == board[win_cord[i, 0]]) {
                    return board[win_cord[i, 0]];
                }
            }
            return '0';
        }
        public void DrawBoard() {
            Console.WriteLine("-------");
            for (int i = 0; i &lt; 3; i++) {
                Console.Write("|" + board[i * 3]);
                Console.Write("|" + board[i * 3 + 1]);
                Console.Write("|" + board[i * 3 + 2] + "|");
                Console.WriteLine("");
            }
            Console.WriteLine("-------");
        }
        public void TakeInput(char player_place) {
            bool valid = false;
            int player_answer;
            while (!valid) {
                Console.WriteLine("Куда поставим " + player_place + '?');
                try {
                    player_answer = Convert.ToInt32(Console.ReadLine());
                }
                catch (FormatException) {
                    Console.WriteLine("Некорректный ввод. Вы уверены, что ввели число?");
                    continue;
                }
                if (player_answer &gt;= 1 &amp;&amp; player_answer &lt;= 9) {
                    if (board[player_answer - 1] != 'X' &amp;&amp;
                        board[player_answer - 1] != 'O') {
                        board[player_answer - 1] = player_place;
                        valid = true;
                    }
                    else {
                        Console.WriteLine("Эта клеточка уже занята");
                    }
                }
                else {
                    Console.WriteLine("Некорректный ввод. Введите число от 1 до 9 чтобы сходить.");
                }
            }
        }
        static void Main(string[] args) {
            bool win = false;
            int counter = 0;
            while (!win) {
                x_or_o.DrawBoard();
                if (counter % 2 == 0) {
                    x_or_o.TakeInput('X');
                }
                else {
                    x_or_o.TakeInput('O');
                }
                counter += 1;
                if (counter == 9) { Console.WriteLine("Ничья!"); }
                else if (counter &gt; 4) {
                    char tmp = x_or_o.CheckWin();
                    if (tmp != '0') {
                        Console.WriteLine(tmp + " выйграл!");
                        win = true;
                    }
                }
            }
            x_or_o.DrawBoard();
        }
    }</check>
</mission>







