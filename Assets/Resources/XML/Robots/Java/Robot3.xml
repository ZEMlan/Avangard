<?xml version="1.0" encoding="utf-8"?>
<mission>
      <score>15</score>
      <task>package magic.magic;

?????? java.util.ArrayList;
import java.util.Collections;
import java.util.List;
?????? java.util.Scanner;

public ????? NeedleSearch {
    static int needle = MAGIC_CONST;
    static ??????? scanner = new Scanner(System.in);

    int find(ArrayList&lt;Integer&gt; haystack, int needle, ??? first, int last){
        ??(first &gt; last)
            return -1;
        int middle = (int)(first+last)/2;
        if (needle == haystack.get(middle))
            ??????? middle;
        else if (needle &gt; haystack.get(middle))
            return find(????????, needle, middle+1, last);
        ????
            return find(haystack, needle, ?????, middle-1);
    }

    ArrayList&lt;Integer&gt; formatHaystack(??????? haystack){
        ArrayList&lt;Integer&gt; newHaystack = ??? ArrayList&lt;&gt;();
        for(var hay: haystack.split(" ")) {
            newHaystack.add(Integer.getInteger(hay));
        }
        ????? newHaystack;
    }

    void main(){
        String haystacks = scanner.nextLine();
        ArrayList haystack = formatHaystack(??????????);
        var needleLocation = find(haystack, needle, 0, haystack.????());
        System.???.println(needleLocation);
    }

}</task>
      <check>package magic.magic;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Scanner;

public class NeedleSearch {
    static int needle = MAGIC_CONST;
    static Scanner scanner = new Scanner(System.in);

    int find(ArrayList&lt;Integer&gt; haystack, int needle, int first, int last){
        if(first &gt; last)
            return -1;
        int middle = (int)(first+last)/2;
        if (needle == haystack.get(middle))
            return middle;
        else if (needle &gt; haystack.get(middle))
            return find(haystack, needle, middle+1, last);
        else
            return find(haystack, needle, first, middle-1);
    }

    ArrayList&lt;Integer&gt; formatHaystack(String haystack){
        ArrayList&lt;Integer&gt; newHaystack = new ArrayList&lt;&gt;();
        for(var hay: haystack.split(" ")) {
            newHaystack.add(Integer.getInteger(hay));
        }
        return newHaystack;
    }

    void main(){
        String haystacks = scanner.nextLine();
        ArrayList haystack = formatHaystack(haystacks);
        var needleLocation = find(haystack, needle, 0, haystack.size());
        System.out.println(needleLocation);
    }

}</check>
</mission>






